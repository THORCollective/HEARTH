name: "Generate HEARTH Draft from Issue"

on:
  issues:
    types: [labeled]
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'The number of the issue to process for draft generation.'
        required: true
        type: 'number'

jobs:
  build-and-pr:
    # Run if the 'intel-submission' label is added, or if triggered manually.
    if: (github.event_name == 'issues' && github.event.label.name == 'intel-submission') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write

    steps:
      - name: "Checkout Repo"
        uses: actions/checkout@v4

      - name: "Download attached CTI file"
        id: download_attachment
        uses: peter-evans/download-issue-attachments@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.inputs.issue_number || github.event.issue.number }}
          path: ./.hearth/intel-drops/

      - name: "Get Issue Context"
        id: issue_context
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: json
          script: |
            let issue_number = 0;
            if (context.eventName === 'workflow_dispatch') {
              issue_number = ${{ github.event.inputs.issue_number }};
            } else {
              issue_number = context.issue.number;
            }
            const response = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
            });
            return {
              body: response.data.body,
              user: response.data.user.login,
              number: issue_number
            }

      - name: "Set up Python 3"
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip
          pip install openai python-dotenv PyPDF2 requests

      - name: "Parse issue for pasted text or link (if no attachment)"
        if: steps.download_attachment.outputs.any_downloaded == 'false'
        id: get_cti
        env:
          ISSUE_BODY: ${{ fromJson(steps.issue_context.outputs.result).body }}
          ISSUE_NUMBER: ${{ fromJson(steps.issue_context.outputs.result).number }}
        run: |
          python scripts/process_issue_body.py

      - name: "Run HEARTH draft generator"
        id: generate_draft
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python scripts/generate_from_cti.py

      - name: "Create Pull Request"
        id: create_pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "feat(hunt): New hunt draft from issue #${{ fromJson(steps.issue_context.outputs.result).number }}"
          committer: "hearthbot <hearthbot@users.noreply.github.com>"
          author: "${{ fromJson(steps.issue_context.outputs.result).user }} <${{ fromJson(steps.issue_context.outputs.result).user }}@users.noreply.github.com>"
          branch: "hearth/issue-${{ fromJson(steps.issue_context.outputs.result).number }}"
          delete-branch: true
          title: "ðŸ”¥ Hunt Draft from Issue #${{ fromJson(steps.issue_context.outputs.result).number }}"
          body: |
            This PR was automatically generated from issue #${{ fromJson(steps.issue_context.outputs.result).number }}.
            
            - **Submitter**: @${{ fromJson(steps.issue_context.outputs.result).user }}
            - **Source Issue**: #${{ fromJson(steps.issue_context.outputs.result).number }}
            
            Please review the generated hunt below.
            
            Closes #${{ fromJson(steps.issue_context.outputs.result).number }}
          labels: "needs-review, automated-draft"
          assignees: "${{ fromJson(steps.issue_context.outputs.result).user }}"

      - name: "Comment on issue with PR link"
        if: steps.create_pr.outputs.pull-request-number
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ fromJson(steps.issue_context.outputs.result).number }}
          body: |
            âœ… Thank you for your submission, @${{ fromJson(steps.issue_context.outputs.result).user }}!
            
            Your CTI has been processed and a draft pull request has been created.
            
            ðŸ”— **View PR**: #${{ steps.create_pr.outputs.pull-request-number }} 