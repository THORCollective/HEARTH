name: "Issue-Driven HEARTH Draft Generation"

on:
  issues:
    types: [labeled]
  issue_comment:
    types: [created]

jobs:
  # This job runs when an issue is labeled, prompting the user to add their file.
  request-file:
    # We only want this to run when the 'intel-submission' label is first added.
    if: github.event_name == 'issues' && github.event.label.name == 'intel-submission'
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: "Post a comment to request the CTI file"
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            âœ… Thank you for your submission, @${{ github.event.issue.user.login }}!

            Please attach your CTI file (e.g., a PDF or .txt file) in a new comment below to begin the automated drafting process.
          reactions: '+1'

  # This job runs on every new comment, but only proceeds if it finds an attachment.
  process-file:
    # We only want this to run on comments on issues that have the right label.
    if: github.event_name == 'issue_comment' && contains(github.event.issue.labels.*.name, 'intel-submission')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
    steps:
      - name: "Checkout Repo"
        uses: actions/checkout@v4

      - name: "Download CTI file from comment"
        id: download_attachment
        uses: peter-evans/download-issue-attachments@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          comment-id: ${{ github.event.comment.id }}
          path: ./.hearth/intel-drops/

      - name: "Check if a file was downloaded"
        if: steps.download_attachment.outputs.any_downloaded == 'false'
        run: |
          echo "No file was attached to this comment. Skipping."
          exit 0

      - name: "Set up Python 3"
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip
          pip install openai python-dotenv PyPDF2

      - name: "Run HEARTH draft generator"
        id: generate_draft
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python scripts/generate_from_cti.py

      - name: "Create Pull Request"
        id: create_pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "feat(hunt): New hunt draft from issue #${{ github.event.issue.number }}"
          committer: "hearthbot <hearthbot@users.noreply.github.com>"
          author: "${{ github.event.comment.user.login }} <${{ github.event.comment.user.login }}@users.noreply.github.com>"
          branch: "hearth/issue-${{ github.event.issue.number }}-${{ github.event.comment.id }}"
          delete-branch: true
          title: "ðŸ”¥ Hunt Draft from Issue #${{ github.event.issue.number }}"
          body: |
            This PR was automatically generated from a file attached to a comment in issue #${{ github.event.issue.number }}.
            
            - **Submitter**: @${{ github.event.comment.user.login }}
            - **Source Issue**: #${{ github.event.issue.number }}
            
            Please review the generated hunt below.
            
            Closes #${{ github.event.issue.number }}
          labels: "needs-review, automated-draft"
          assignees: "${{ github.event.comment.user.login }}"

      - name: "Comment on issue with PR link"
        if: steps.create_pr.outputs.pull-request-number
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            ðŸ“„ Your file has been processed and a draft pull request has been created. Thank you!
            
            ðŸ”— **View PR**: #${{ steps.create_pr.outputs.pull-request-number }} 